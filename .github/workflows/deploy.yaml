name: Azure Web Deploy

# Trigger this workflow whenever code is pushed to the 'main' branch
on:
  push:
    branches:
      - main

jobs:
  deploy:
    runs-on: ubuntu-latest # Use Ubuntu runner

    steps:
      # Step 1: Checkout the repository code
      - name: Checkout repository
        uses: actions/checkout@v2

      # Step 2: Install Azure CLI
      - name: Install Azure CLI
        run: |
          curl -sL https://aka.ms/InstallAzureCLIDeb | sudo bash

      # Step 3: Set AZURE_CREDENTIALS using secrets
      - name: Debug AZURE_CREDENTIALS
        run: |
          echo "AZURE_CREDENTIALS: ${{ secrets.AZURE_CREDENTIALS }}"
          echo "${{ secrets.AZURE_CREDENTIALS }}" | jq .

      # Step 4: Login to Azure using service principal
      - name: Azure login
        run: |
          AZURE_CREDENTIALS="${{ secrets.AZURE_CREDENTIALS }}"
          CLIENT_ID=$(echo $AZURE_CREDENTIALS | jq -r '.clientId')
          CLIENT_SECRET=$(echo $AZURE_CREDENTIALS | jq -r '.clientSecret')
          TENANT_ID=$(echo $AZURE_CREDENTIALS | jq -r '.tenantId')
          SUBSCRIPTION_ID=$(echo $AZURE_CREDENTIALS | jq -r '.subscriptionId')
          az login --service-principal --username $CLIENT_ID --password $CLIENT_SECRET --tenant $TENANT_ID
          az account set --subscription $SUBSCRIPTION_ID

      # Step 5: Upload content to Azure Blob Storage using Azure CLI
      - name: Upload to Azure Blob Storage
        run: |
          az storage blob upload-batch \
            -d '$web' \
            --account-name perkupstorage \
            --source ./static_website \
            --overwrite true  # Overwrite existing files in Azure if they are updated

      # Step 6: Notify success
      - name: Deployment Successful
        run: echo "Deployment to Azure Storage Account completed successfully!"
